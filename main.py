from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes

TOKEN = '7382250158:AAE6DLfyjuTK-PmCAgDc9H9_7Tk0uKvNBto'

BAD_WORDS = [
    "http", "https", "t.me", "@", "–ø–æ–¥–ø–∏—à–∏—Å—å", "—Å–∫–∏–¥–∫–∞", "–ø—Ä–æ–¥–∞–∂–∞",
    "–∑–∞—Ä–∞–±–æ—Ç–æ–∫", "–¥–µ–Ω—å–≥–∏", "–≤–∫", "–∫–ª–∏–∫–Ω–∏", "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "—á–∞—Ç"
]

WHITELIST_USERNAMES = ['mrgrgrv', 'sbleskom_manager']

async def check_spam(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    if not message or not message.text:
        return

    if message.sender_chat:
        print(f"‚úÖ –ü—Ä–æ–ø—É—â–µ–Ω–æ: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –≥—Ä—É–ø–ø—ã ‚Äî {message.sender_chat.title}")
        return

    user = message.from_user
    user_id = user.id
    username = user.username or ""

    text = message.text.lower()
    chat_id = message.chat_id

    try:
        chat_admins = await context.bot.get_chat_administrators(chat_id)
        admin_ids = [admin.user.id for admin in chat_admins]
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–≤: {e}")
        admin_ids = []

    if user_id in admin_ids or username in WHITELIST_USERNAMES:
        print(f"‚úÖ –ü—Ä–æ–ø—É—â–µ–Ω–æ: @{username or user_id} ‚Äî –∞–¥–º–∏–Ω –∏–ª–∏ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ")
        return

    if any(bad in text for bad in BAD_WORDS):
        try:
            await message.delete()
            print(f"üö´ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{username or user_id}: {text}")
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", e)

if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, check_spam))
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –§–∏–ª—å—Ç—Ä—É–µ—Ç —Å–ø–∞–º...")
    app.run_polling()
